@Command init Инициализирует репозиторий в текущей папке
    @Tip Если не получается создать репозиторий, возможно в текущей папке уже был создан репозиторий
        или была попытка его создать. Удалите папку .liteVCS и повторите попытку

@Command add Сохраняет копию текущего состояния файла, добавляет файл в stage-area
    (список изменений, которые войдут в следующий коммит)
    @Argument file путь к файлу, который вы хотите добавить в репозиторий
    @Tip Вы можете увидеть список файлов, добавленных после последнего коммита с помощью команды status

@Command commit Создаёт коммит, в который входят все изменения, находящиейся в stage-area. Добавляет коммит в текущую ветку.
    @Argument message Обязательный комментарий к коммиту
    @Tip список коммитов в текущей ветке можно посмотреть с помощью команды logs


@Command checkout Удаляет все файлы из рабочей директории, а затем загружает версии файлов,
    описанных в дескрипторе
    @Argument id дескриптора
    @Tip Иденификаторы дескрипторов коммитов можно узнать с помощью команды logs
    @Tip При выполнении команды stage-area не очищается
    @Tip Эта команда никак не меняет состояние ветки (например, не откатывает её к предыдущим коммитам) и не переключает ветку

@Command clean Удаляет все файлы из текущей директории, которые не относятся к текущей ветке и не добавлялись в stage-area.
    @Tip Файл не будет удалён, если был добавлен в stage-area, а потом повторно изменён.

@Command status Показывает изменения, находящиеся в stage-area, для каждого файла из рабочей папки сообщает статус (CHANGED - файл отличается от
    версии в последнем коммите и в stage-area; NOT_CHANGED; UNKNOWN - не отслеживается репозиторием; DISAPPEARED - файл пропал, но не удалён через liteVCS),
    также перечислеят изменения, содержащиеся в stage-area.

@Command  create_branch Создёт новую ветку, ответвляющуюся от текущей ветки
    @Argument name желаемое имя новой ветки
    @Tip Переключение ветки при этом не происходит. Для этого есть команда switch_branch.
    @Tip Нельзя создать две ветки с одинаковым именем
    @Tip При создании репозитория автоматически создаётся ветка master.

@Command remove_branch Удаляет ветку
    @Argument name имя ветки, которую хотите удалить
    @Tip Нельзя удалить текущую ветку

@Command switch_branch Назанчает указанную ветку активной, восстанавливает состояние рабочей директории (checkout на последний коммит).
    @Argument name имя ветки, которую вы хотите сделать активной.
    @Tip Нельзя переключиться на ветку, которая и так является активной

@Command merge_branch Если нет неразрешимых конфликтов (один и тот же файл изменили по разному в разных ветках), то
        добавляет изменения из указанной ветки в текущую, создавая коммит с указанным сообщением.
  @Argument branch имя ветки, которую надо влить в текущую
  @Argument message сообщение, которое будет указано в созданном коммите
  @Tip Нельзя мёрджить ветку саму с собой.
  @Tip Необходимо заранее закоммитить все изменения из stage-area.
  @Tip Команда работает с вектами, но не задевает физические файлы в рабочей директории.
  Следовательно, чтобы увидеть изменения надо сделать checkout или reset

@Command reset Восстанавливает полседнюю закоммиченную версию файла. Удаляет иформацию об изменении этого
        файла из stage-area
  @Argument file целевой файл
  @Tip Нельзя вызывать reset на файл, который не содержится в дескрипторе текущей ветки.

@Command uninstall Удаляет репозиторий
  @Tip Не трогает пользовательские файлы в рабочей директории, удаляет только служебные файлы
  @Tip Удаляет логи

@Command logs Показывает последние несколько коммитов в текующей ветке
  @Argument count - количество показываемых коммитов
  @Tip Показывает идентификаторы дескрипторов (описаний версий файлов) для коммитов

@Command hello Задаёт имя пользователя.
  @Argument name Желаемое имя пользователя
  @Tip По умолчанию имя пользователя UNKNOWN

@Command remove Удаляет файл из рабочей папки, записывает в stage-area информацию о том, что в
    следующем коммите надо этот файл перестать отслеживать
  @Argument file целевой файл
  @Tip Можно удалять файлы, даже если они не отслеживаются репозиторием/не содержатся в stage-area

@Command help Показывает справку к указанной команде
  @Argument command Название интересующей вас команды
  @Tip Если вместо команды передать в качестве аргумента ключ --all, то будет показан список всех доступных комнад